//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFTheWeakestRival.GameplayService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitAnswerRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class SubmitAnswerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        private System.Guid QuestionIdField;
        
        private string AnswerTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan ResponseTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string AnswerText {
            get {
                return this.AnswerTextField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerTextField, value) != true)) {
                    this.AnswerTextField = value;
                    this.RaisePropertyChanged("AnswerText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.TimeSpan ResponseTime {
            get {
                return this.ResponseTimeField;
            }
            set {
                if ((this.ResponseTimeField.Equals(value) != true)) {
                    this.ResponseTimeField = value;
                    this.RaisePropertyChanged("ResponseTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubmitAnswerResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class SubmitAnswerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.GameplayService.AnswerResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.GameplayService.AnswerResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerResult", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class AnswerResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCorrectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChainIncrementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentChainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BankedPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public bool IsCorrect {
            get {
                return this.IsCorrectField;
            }
            set {
                if ((this.IsCorrectField.Equals(value) != true)) {
                    this.IsCorrectField = value;
                    this.RaisePropertyChanged("IsCorrect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public decimal ChainIncrement {
            get {
                return this.ChainIncrementField;
            }
            set {
                if ((this.ChainIncrementField.Equals(value) != true)) {
                    this.ChainIncrementField = value;
                    this.RaisePropertyChanged("ChainIncrement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public decimal CurrentChain {
            get {
                return this.CurrentChainField;
            }
            set {
                if ((this.CurrentChainField.Equals(value) != true)) {
                    this.CurrentChainField = value;
                    this.RaisePropertyChanged("CurrentChain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal BankedPoints {
            get {
                return this.BankedPointsField;
            }
            set {
                if ((this.BankedPointsField.Equals(value) != true)) {
                    this.BankedPointsField = value;
                    this.RaisePropertyChanged("BankedPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class BankRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class BankResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.GameplayService.BankState BankField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.GameplayService.BankState Bank {
            get {
                return this.BankField;
            }
            set {
                if ((object.ReferenceEquals(this.BankField, value) != true)) {
                    this.BankField = value;
                    this.RaisePropertyChanged("Bank");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankState", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class BankState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CurrentChainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BankedPointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public decimal CurrentChain {
            get {
                return this.CurrentChainField;
            }
            set {
                if ((this.CurrentChainField.Equals(value) != true)) {
                    this.CurrentChainField = value;
                    this.RaisePropertyChanged("CurrentChain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public decimal BankedPoints {
            get {
                return this.BankedPointsField;
            }
            set {
                if ((this.BankedPointsField.Equals(value) != true)) {
                    this.BankedPointsField = value;
                    this.RaisePropertyChanged("BankedPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UseLifelineRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class UseLifelineRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        private string LifelineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TargetPlayerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Lifeline {
            get {
                return this.LifelineField;
            }
            set {
                if ((object.ReferenceEquals(this.LifelineField, value) != true)) {
                    this.LifelineField = value;
                    this.RaisePropertyChanged("Lifeline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.Guid> TargetPlayerId {
            get {
                return this.TargetPlayerIdField;
            }
            set {
                if ((this.TargetPlayerIdField.Equals(value) != true)) {
                    this.TargetPlayerIdField = value;
                    this.RaisePropertyChanged("TargetPlayerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UseLifelineResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class UseLifelineResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OutcomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Outcome {
            get {
                return this.OutcomeField;
            }
            set {
                if ((object.ReferenceEquals(this.OutcomeField, value) != true)) {
                    this.OutcomeField = value;
                    this.RaisePropertyChanged("Outcome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CastVoteRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class CastVoteRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        private System.Guid ToPlayerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public System.Guid ToPlayerId {
            get {
                return this.ToPlayerIdField;
            }
            set {
                if ((this.ToPlayerIdField.Equals(value) != true)) {
                    this.ToPlayerIdField = value;
                    this.RaisePropertyChanged("ToPlayerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CastVoteResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class CastVoteResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcceptedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Accepted {
            get {
                return this.AcceptedField;
            }
            set {
                if ((this.AcceptedField.Equals(value) != true)) {
                    this.AcceptedField = value;
                    this.RaisePropertyChanged("Accepted");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AckEventSeenRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class AckEventSeenRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        private string EventNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AckEventSeenResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class AckEventSeenResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AcknowledgedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Acknowledged {
            get {
                return this.AcknowledgedField;
            }
            set {
                if ((this.AcknowledgedField.Equals(value) != true)) {
                    this.AcknowledgedField = value;
                    this.RaisePropertyChanged("Acknowledged");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerSummary", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PlayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid QuestionIdField;
        
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DifficultyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Difficulty {
            get {
                return this.DifficultyField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyField, value) != true)) {
                    this.DifficultyField = value;
                    this.RaisePropertyChanged("Difficulty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameplayService.IGameplayService", CallbackContract=typeof(WPFTheWeakestRival.GameplayService.IGameplayServiceCallback))]
    public interface IGameplayService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/SubmitAnswer", ReplyAction="http://tempuri.org/IGameplayService/SubmitAnswerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.GameplayService.ServiceFault), Action="http://tempuri.org/IGameplayService/SubmitAnswerServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.GameplayService.SubmitAnswerResponse SubmitAnswer(WPFTheWeakestRival.GameplayService.SubmitAnswerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/SubmitAnswer", ReplyAction="http://tempuri.org/IGameplayService/SubmitAnswerResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.SubmitAnswerResponse> SubmitAnswerAsync(WPFTheWeakestRival.GameplayService.SubmitAnswerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/Bank", ReplyAction="http://tempuri.org/IGameplayService/BankResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.GameplayService.ServiceFault), Action="http://tempuri.org/IGameplayService/BankServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.GameplayService.BankResponse Bank(WPFTheWeakestRival.GameplayService.BankRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/Bank", ReplyAction="http://tempuri.org/IGameplayService/BankResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.BankResponse> BankAsync(WPFTheWeakestRival.GameplayService.BankRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/UseLifeline", ReplyAction="http://tempuri.org/IGameplayService/UseLifelineResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.GameplayService.ServiceFault), Action="http://tempuri.org/IGameplayService/UseLifelineServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.GameplayService.UseLifelineResponse UseLifeline(WPFTheWeakestRival.GameplayService.UseLifelineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/UseLifeline", ReplyAction="http://tempuri.org/IGameplayService/UseLifelineResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.UseLifelineResponse> UseLifelineAsync(WPFTheWeakestRival.GameplayService.UseLifelineRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/CastVote", ReplyAction="http://tempuri.org/IGameplayService/CastVoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.GameplayService.ServiceFault), Action="http://tempuri.org/IGameplayService/CastVoteServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.GameplayService.CastVoteResponse CastVote(WPFTheWeakestRival.GameplayService.CastVoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/CastVote", ReplyAction="http://tempuri.org/IGameplayService/CastVoteResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.CastVoteResponse> CastVoteAsync(WPFTheWeakestRival.GameplayService.CastVoteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/AckEventSeen", ReplyAction="http://tempuri.org/IGameplayService/AckEventSeenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.GameplayService.ServiceFault), Action="http://tempuri.org/IGameplayService/AckEventSeenServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.GameplayService.AckEventSeenResponse AckEventSeen(WPFTheWeakestRival.GameplayService.AckEventSeenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameplayService/AckEventSeen", ReplyAction="http://tempuri.org/IGameplayService/AckEventSeenResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.AckEventSeenResponse> AckEventSeenAsync(WPFTheWeakestRival.GameplayService.AckEventSeenRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameplayServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnNextQuestion")]
        void OnNextQuestion(System.Guid matchId, WPFTheWeakestRival.GameplayService.PlayerSummary targetPlayer, WPFTheWeakestRival.GameplayService.Question question, decimal currentChain, decimal banked);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnAnswerEvaluated")]
        void OnAnswerEvaluated(System.Guid matchId, WPFTheWeakestRival.GameplayService.PlayerSummary player, WPFTheWeakestRival.GameplayService.AnswerResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnBankUpdated")]
        void OnBankUpdated(System.Guid matchId, WPFTheWeakestRival.GameplayService.BankState bank);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnVotePhaseStarted")]
        void OnVotePhaseStarted(System.Guid matchId, System.TimeSpan timeLimit);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnElimination")]
        void OnElimination(System.Guid matchId, WPFTheWeakestRival.GameplayService.PlayerSummary eliminatedPlayer);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameplayService/OnSpecialEvent")]
        void OnSpecialEvent(System.Guid matchId, string eventName, string description);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameplayServiceChannel : WPFTheWeakestRival.GameplayService.IGameplayService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameplayServiceClient : System.ServiceModel.DuplexClientBase<WPFTheWeakestRival.GameplayService.IGameplayService>, WPFTheWeakestRival.GameplayService.IGameplayService {
        
        public GameplayServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameplayServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameplayServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameplayServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameplayServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public WPFTheWeakestRival.GameplayService.SubmitAnswerResponse SubmitAnswer(WPFTheWeakestRival.GameplayService.SubmitAnswerRequest request) {
            return base.Channel.SubmitAnswer(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.SubmitAnswerResponse> SubmitAnswerAsync(WPFTheWeakestRival.GameplayService.SubmitAnswerRequest request) {
            return base.Channel.SubmitAnswerAsync(request);
        }
        
        public WPFTheWeakestRival.GameplayService.BankResponse Bank(WPFTheWeakestRival.GameplayService.BankRequest request) {
            return base.Channel.Bank(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.BankResponse> BankAsync(WPFTheWeakestRival.GameplayService.BankRequest request) {
            return base.Channel.BankAsync(request);
        }
        
        public WPFTheWeakestRival.GameplayService.UseLifelineResponse UseLifeline(WPFTheWeakestRival.GameplayService.UseLifelineRequest request) {
            return base.Channel.UseLifeline(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.UseLifelineResponse> UseLifelineAsync(WPFTheWeakestRival.GameplayService.UseLifelineRequest request) {
            return base.Channel.UseLifelineAsync(request);
        }
        
        public WPFTheWeakestRival.GameplayService.CastVoteResponse CastVote(WPFTheWeakestRival.GameplayService.CastVoteRequest request) {
            return base.Channel.CastVote(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.CastVoteResponse> CastVoteAsync(WPFTheWeakestRival.GameplayService.CastVoteRequest request) {
            return base.Channel.CastVoteAsync(request);
        }
        
        public WPFTheWeakestRival.GameplayService.AckEventSeenResponse AckEventSeen(WPFTheWeakestRival.GameplayService.AckEventSeenRequest request) {
            return base.Channel.AckEventSeen(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.GameplayService.AckEventSeenResponse> AckEventSeenAsync(WPFTheWeakestRival.GameplayService.AckEventSeenRequest request) {
            return base.Channel.AckEventSeenAsync(request);
        }
    }
}
