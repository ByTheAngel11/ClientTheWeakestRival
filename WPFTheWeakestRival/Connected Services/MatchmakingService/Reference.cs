//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFTheWeakestRival.MatchmakingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateMatchRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class CreateMatchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private int MaxPlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int MaxPlayers {
            get {
                return this.MaxPlayersField;
            }
            set {
                if ((this.MaxPlayersField.Equals(value) != true)) {
                    this.MaxPlayersField = value;
                    this.RaisePropertyChanged("MaxPlayers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateMatchResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class CreateMatchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.MatchmakingService.MatchInfo MatchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.MatchmakingService.MatchInfo Match {
            get {
                return this.MatchField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchField, value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchInfo", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class MatchInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid MatchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MatchCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFTheWeakestRival.MatchmakingService.PlayerSummary[] PlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string MatchCode {
            get {
                return this.MatchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodeField, value) != true)) {
                    this.MatchCodeField = value;
                    this.RaisePropertyChanged("MatchCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WPFTheWeakestRival.MatchmakingService.PlayerSummary[] Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerSummary", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class PlayerSummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PlayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JoinMatchRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class JoinMatchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private string MatchCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public string MatchCode {
            get {
                return this.MatchCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchCodeField, value) != true)) {
                    this.MatchCodeField = value;
                    this.RaisePropertyChanged("MatchCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JoinMatchResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class JoinMatchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.MatchmakingService.MatchInfo MatchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.MatchmakingService.MatchInfo Match {
            get {
                return this.MatchField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchField, value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaveMatchRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class LeaveMatchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartMatchRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class StartMatchRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string TokenField;
        
        private System.Guid MatchIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.Guid MatchId {
            get {
                return this.MatchIdField;
            }
            set {
                if ((this.MatchIdField.Equals(value) != true)) {
                    this.MatchIdField = value;
                    this.RaisePropertyChanged("MatchId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartMatchResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class StartMatchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.MatchmakingService.MatchInfo MatchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.MatchmakingService.MatchInfo Match {
            get {
                return this.MatchField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchField, value) != true)) {
                    this.MatchField = value;
                    this.RaisePropertyChanged("Match");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListOpenMatchesRequest", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class ListOpenMatchesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Top {
            get {
                return this.TopField;
            }
            set {
                if ((this.TopField.Equals(value) != true)) {
                    this.TopField = value;
                    this.RaisePropertyChanged("Top");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListOpenMatchesResponse", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
    [System.SerializableAttribute()]
    public partial class ListOpenMatchesResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private WPFTheWeakestRival.MatchmakingService.MatchInfo[] MatchesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public WPFTheWeakestRival.MatchmakingService.MatchInfo[] Matches {
            get {
                return this.MatchesField;
            }
            set {
                if ((object.ReferenceEquals(this.MatchesField, value) != true)) {
                    this.MatchesField = value;
                    this.RaisePropertyChanged("Matches");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MatchmakingService.IMatchmakingService", CallbackContract=typeof(WPFTheWeakestRival.MatchmakingService.IMatchmakingServiceCallback))]
    public interface IMatchmakingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/CreateMatchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.MatchmakingService.ServiceFault), Action="http://tempuri.org/IMatchmakingService/CreateMatchServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.MatchmakingService.CreateMatchResponse CreateMatch(WPFTheWeakestRival.MatchmakingService.CreateMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/CreateMatch", ReplyAction="http://tempuri.org/IMatchmakingService/CreateMatchResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.CreateMatchResponse> CreateMatchAsync(WPFTheWeakestRival.MatchmakingService.CreateMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/JoinMatch", ReplyAction="http://tempuri.org/IMatchmakingService/JoinMatchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.MatchmakingService.ServiceFault), Action="http://tempuri.org/IMatchmakingService/JoinMatchServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.MatchmakingService.JoinMatchResponse JoinMatch(WPFTheWeakestRival.MatchmakingService.JoinMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/JoinMatch", ReplyAction="http://tempuri.org/IMatchmakingService/JoinMatchResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.JoinMatchResponse> JoinMatchAsync(WPFTheWeakestRival.MatchmakingService.JoinMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/LeaveMatch", ReplyAction="http://tempuri.org/IMatchmakingService/LeaveMatchResponse")]
        void LeaveMatch(WPFTheWeakestRival.MatchmakingService.LeaveMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/LeaveMatch", ReplyAction="http://tempuri.org/IMatchmakingService/LeaveMatchResponse")]
        System.Threading.Tasks.Task LeaveMatchAsync(WPFTheWeakestRival.MatchmakingService.LeaveMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/StartMatch", ReplyAction="http://tempuri.org/IMatchmakingService/StartMatchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.MatchmakingService.ServiceFault), Action="http://tempuri.org/IMatchmakingService/StartMatchServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.MatchmakingService.StartMatchResponse StartMatch(WPFTheWeakestRival.MatchmakingService.StartMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/StartMatch", ReplyAction="http://tempuri.org/IMatchmakingService/StartMatchResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.StartMatchResponse> StartMatchAsync(WPFTheWeakestRival.MatchmakingService.StartMatchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/ListOpenMatches", ReplyAction="http://tempuri.org/IMatchmakingService/ListOpenMatchesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WPFTheWeakestRival.MatchmakingService.ServiceFault), Action="http://tempuri.org/IMatchmakingService/ListOpenMatchesServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/ServicesTheWeakestRival.Contracts.Data")]
        WPFTheWeakestRival.MatchmakingService.ListOpenMatchesResponse ListOpenMatches(WPFTheWeakestRival.MatchmakingService.ListOpenMatchesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchmakingService/ListOpenMatches", ReplyAction="http://tempuri.org/IMatchmakingService/ListOpenMatchesResponse")]
        System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.ListOpenMatchesResponse> ListOpenMatchesAsync(WPFTheWeakestRival.MatchmakingService.ListOpenMatchesRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/OnMatchCreated")]
        void OnMatchCreated(WPFTheWeakestRival.MatchmakingService.MatchInfo match);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/OnMatchPlayerJoined")]
        void OnMatchPlayerJoined(System.Guid matchId, WPFTheWeakestRival.MatchmakingService.PlayerSummary player);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/OnMatchPlayerLeft")]
        void OnMatchPlayerLeft(System.Guid matchId, System.Guid playerId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/OnMatchStarted")]
        void OnMatchStarted(WPFTheWeakestRival.MatchmakingService.MatchInfo match);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchmakingService/OnMatchCancelled")]
        void OnMatchCancelled(System.Guid matchId, string reason);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchmakingServiceChannel : WPFTheWeakestRival.MatchmakingService.IMatchmakingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchmakingServiceClient : System.ServiceModel.DuplexClientBase<WPFTheWeakestRival.MatchmakingService.IMatchmakingService>, WPFTheWeakestRival.MatchmakingService.IMatchmakingService {
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchmakingServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public WPFTheWeakestRival.MatchmakingService.CreateMatchResponse CreateMatch(WPFTheWeakestRival.MatchmakingService.CreateMatchRequest request) {
            return base.Channel.CreateMatch(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.CreateMatchResponse> CreateMatchAsync(WPFTheWeakestRival.MatchmakingService.CreateMatchRequest request) {
            return base.Channel.CreateMatchAsync(request);
        }
        
        public WPFTheWeakestRival.MatchmakingService.JoinMatchResponse JoinMatch(WPFTheWeakestRival.MatchmakingService.JoinMatchRequest request) {
            return base.Channel.JoinMatch(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.JoinMatchResponse> JoinMatchAsync(WPFTheWeakestRival.MatchmakingService.JoinMatchRequest request) {
            return base.Channel.JoinMatchAsync(request);
        }
        
        public void LeaveMatch(WPFTheWeakestRival.MatchmakingService.LeaveMatchRequest request) {
            base.Channel.LeaveMatch(request);
        }
        
        public System.Threading.Tasks.Task LeaveMatchAsync(WPFTheWeakestRival.MatchmakingService.LeaveMatchRequest request) {
            return base.Channel.LeaveMatchAsync(request);
        }
        
        public WPFTheWeakestRival.MatchmakingService.StartMatchResponse StartMatch(WPFTheWeakestRival.MatchmakingService.StartMatchRequest request) {
            return base.Channel.StartMatch(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.StartMatchResponse> StartMatchAsync(WPFTheWeakestRival.MatchmakingService.StartMatchRequest request) {
            return base.Channel.StartMatchAsync(request);
        }
        
        public WPFTheWeakestRival.MatchmakingService.ListOpenMatchesResponse ListOpenMatches(WPFTheWeakestRival.MatchmakingService.ListOpenMatchesRequest request) {
            return base.Channel.ListOpenMatches(request);
        }
        
        public System.Threading.Tasks.Task<WPFTheWeakestRival.MatchmakingService.ListOpenMatchesResponse> ListOpenMatchesAsync(WPFTheWeakestRival.MatchmakingService.ListOpenMatchesRequest request) {
            return base.Channel.ListOpenMatchesAsync(request);
        }
    }
}
